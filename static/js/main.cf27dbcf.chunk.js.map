{"version":3,"sources":["constants/ActionTypes.js","actions/breaches.js","components/Toolbar.js","containers/Toolbar.js","components/BreachesForm.js","containers/BreachesForm.js","actions/breachesForm.js","components/Breaches.js","selectors/breaches.js","containers/Breaches.js","selectors/breachDetails.js","components/BreachesModal.js","components/BreachDetails.js","containers/BreachDetails.js","actions/breachesDetails.js","reducers/breaches.js","reducers/index.js","index.js","components/404.js"],"names":["BREACHES_SUCCESS","SORT_BREACHES_BY_NAME","SORT_BREACHES_BY_COUNT","DELETE_BREACH_BY_ID","SET_VISIBILITY_FILTER","SET_KEYWORD","ADD_BREACH","SET_EDITING","UPDATE_BREACH","getBreaches","createAction","endpoint","method","types","useStyles","makeStyles","marginTop","container","display","gridTemplateColumns","gridTemplateRows","gridColumnSpacing","marginBottom","itemBottomRight","gridRowStart","gridColumn","color","itemBottomLeft","itemTopLeft","itemTopCenter","itemTopRight","button","backgroundColor","Toolbar","sortByName","sortByCount","setKeyword","setVisibilityFilter","classes","className","Button","onClick","onSubmit","e","preventDefault","target","value","TextField","label","type","connect","dispatch","filter","keyword","borderBottomColor","margin","form","minWidth","flexDirection","justifyContent","flexWrap","padding","overflow","list","maxHeight","alignItems","listItem","listField","flexGrow","listAddButton","listDelButton","paper","width","alignSelf","buttonLeaks","resetButton","fileContainer","textAlign","background","position","borderRadius","fileInput","FormComponent","props","values","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","setFieldValue","Paper","id","name","variant","placeholder","error","Name","helperText","undefined","onChange","onBlur","Title","Domain","BreachDate","PwnCount","rows","Description","multiline","render","arrayHelpers","List","DataClasses","length","map","data","index","ListItem","insert","remove","push","event","currentTarget","files","disabled","Form","withFormik","validate","match","Date","parse","now","mapPropsToValues","file","setSubmitting","resetForm","formData","FormData","append","url","fetch","body","then","response","json","result","catch","console","breach","_id","ObjectID","toString","x","LogoPath","addBreach","setTimeout","borderBottom","flexContainer","minHeight","navText","fontSize","navBar","Breaches","breaches","loaded","deleteBreachById","useEffect","isMobile","useMediaQuery","isMidsized","columnModel","field","title","cellStyle","whiteSpace","headerStyle","hidden","rowData","src","alt","style","maxWidth","slice","to","textDecoration","AppBar","Typography","columns","isLoading","table","options","rowStyle","fontFamily","sorting","actions","icon","tooltip","components","getFilteredBreaches","createSelector","state","visibilityFilter","t","IsVerified","getBreachesFilteredByKeyword","filteredBreaches","withDuplicates","toLowerCase","includes","Array","from","Set","find","a","getBreachMatchingRouteId","_state","params","BreachesModal","forwardRef","ref","setEditing","modal","spellCheck","controls","closeButton","top","left","marginLeft","border","paddingTop","cardContainer","backButton","BreachDetails","editing","Card","CardContent","gutterBottom","height","component","ReactHtmlParser","Modal","open","onClose","CircularProgress","enableReinitialize","updateBreach","BreachDetailsComponent","ownProps","defaultState","action","payload","newBreach","log","sortedByName","sort","b","localeCompare","sortedByCount","filtered","combineReducers","persistedState","localStorage","getItem","JSON","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apiMiddleware","subscribe","setItem","stringify","getState","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.cf27dbcf.chunk.js","sourcesContent":["export const BREACHES_SUCCESS = 'BREACHES_SUCCESS'\nexport const BREACHES_REQUEST = 'BREACHES_REQUEST'\nexport const BREACHES_FAILURE = 'BREACHES_FAILURE'\nexport const SORT_BREACHES_BY_NAME = 'SORT_BREACHES_BY_NAME'\nexport const SORT_BREACHES_BY_COUNT = 'SORT_BREACHES_BY_COUNT'\nexport const DELETE_BREACH_BY_ID = 'DELETE_BREACH_BY_ID'\nexport const SET_VISIBILITY_FILTER = 'SET_VISIBILITY_FILTER'\nexport const SET_KEYWORD = 'SET_KEYWORD'\nexport const ADD_BREACH = 'ADD_BREACH'\nexport const SET_EDITING = 'SET_EDITING'\nexport const UPDATE_BREACH = 'UPDATE_BREACH'\n","import { createAction } from 'redux-api-middleware';\nimport * as types from '../constants/ActionTypes'\n\nexport const getBreaches = () => createAction({\n    endpoint: 'https://user-sec-app.herokuapp.com/',\n    method: 'GET',\n    types: [\n        types.BREACHES_REQUEST,\n        types.BREACHES_SUCCESS,\n        types.BREACHES_FAILURE\n    ]\n});\n\nexport const sortByCount = () => { \n    return {\n        type: types.SORT_BREACHES_BY_COUNT \n    }\n}\n\nexport const sortByName = () => { \n    return {\n        type: types.SORT_BREACHES_BY_NAME\n    }\n}\n\nexport const deleteBreachById = (id) => { \n    return {\n        type: types.DELETE_BREACH_BY_ID,\n        id: id\n    }\n}\n\nexport const setVisibilityFilter = (filter) => {\n    return {\n        type: types.SET_VISIBILITY_FILTER,\n        filter\n    }\n}\n\nexport const setKeyword = (keyword) => {\n    return {\n        type: types.SET_KEYWORD,\n        keyword\n    }\n}","import { Button, TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst Toolbar = ({sortByName, sortByCount, setKeyword, setVisibilityFilter}) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.container}>\n            <Button \n                onClick={() => {\n                    sortByName()\n                }}\n                className={classes.itemTopLeft}\n            >\n            Filter by name\n            </Button>\n            <Button \n                onClick={() => {\n                    sortByCount()\n                }}\n                className={classes.itemTopCenter}\n            >\n            Filter by count\n            </Button>\n            <Button\n                onClick={() => {\n                    setVisibilityFilter(\"SHOW_VERIFIED\")\n                }}\n                className={classes.itemTopRight}\n            >\n            Show verified\n            </Button>\n            <Button \n                onClick={() => {\n                    setVisibilityFilter(\"SHOW_ALL\")\n                }}\n                className={classes.itemBottomLeft}\n            >\n            Show all\n            </Button>\n\n            <form \n                onSubmit={(e) => {\n                    e.preventDefault()\n                    setKeyword(e.target[0].value)\n                }}\n                className={classes.itemBottomRight}\n            >\n                <TextField label=\"Search...\" />\n                <Button className={classes.button} type=\"submit\">\n                    Search\n                </Button>\n            </form>\n        </div>\n    )\n}\n\n\nconst useStyles = makeStyles({\n    '@global': {\n        '.makeStyles-itemBottomRight-15 > .MuiFormControl-root.MuiTextField-root': {\n            marginTop: '-16px'\n        }\n    },\n    container: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(6, 1fr)\",\n        gridTemplateRows: \"repeat(2, 1fr)\",\n        gridColumnSpacing: \"1em\",\n        marginTop: '1em',\n        marginBottom: '1em',\n        \"@media (min-width: 780px)\" : {\n            gridTemplateColumns: \"repeat(5, 1fr)\",\n            gridTemplateRows: \"1fr\",\n        }\n    },\n    itemBottomRight: {\n        gridRowStart: '2',\n        gridColumn: '4 / span 7',\n        color: \"#ffffff\",\n        \"@media (min-width: 780px)\" : {\n            gridColumn: '5',\n            gridRowStart: '1'\n        }\n    },\n    itemBottomLeft: {\n        gridRowStart: '2',\n        gridColumn: '1 / span 3',\n        color: \"#ffffff\",\n        \"@media (min-width: 780px)\" : {\n            gridColumn: '4',\n            gridRowStart: '1'\n        }\n    },\n    itemTopLeft: {\n        gridRowStart: '1',\n        gridColumn: '1 / 3',\n        color: \"#ffffff\",\n        \"@media (min-width: 780px)\" : {\n            gridColumn: 'auto'\n        }\n    },\n    itemTopCenter: {\n        gridRowStart: '1',\n        gridColumn: '3 / 5',\n        color: \"#ffffff\",\n        \"@media (min-width: 780px)\" : {\n            gridColumn: 'auto'\n        }\n    },\n    itemTopRight: {\n        gridRowStart: '1',\n        gridColumn: '5 / 7',\n        color: \"#ffffff\",\n        \"@media (min-width: 780px)\" : {\n            gridColumn: 'auto'\n        }\n    },\n    button: {\n        color: \"#000000\",\n        backgroundColor: \"#3949ab\",\n        '&:hover': {\n            backgroundColor: \"#627d98\",\n        },\n    },\n});\n\nexport default Toolbar;","import { connect } from 'react-redux';\nimport { sortByCount, sortByName, setVisibilityFilter, setKeyword } from '../actions/breaches';\nimport Toolbar from '../components/Toolbar'\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        sortByName: () => {\n            dispatch(sortByName())\n        },\n        sortByCount: () => {\n            dispatch(sortByCount())\n        },\n        setVisibilityFilter: (filter) => {\n            dispatch(setVisibilityFilter(filter))\n        },\n        setKeyword: (keyword) => {\n            dispatch(setKeyword(keyword))\n        },\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Toolbar)\n","import { TextField, Button, List, ListItem, Paper } from '@material-ui/core';\nimport { FieldArray} from 'formik';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst FormComponent = (props) => {\n    const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        handleReset,\n        setFieldValue,\n    } = props;\n\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.paper}>\n            <form onSubmit={handleSubmit} className={classes.form}>\n                <TextField \n                    id=\"standard-basic\"\n                    label=\"Name\"\n                    name=\"Name\"\n                    type=\"text\"\n                    variant=\"filled\"\n                    placeholder=\"Name\"\n                    error={errors.Name && touched.Name}\n                    helperText={touched.Name \n                        ? errors.Name\n                        : undefined\n                    }\n                    value={values.Name}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                />\n                <TextField \n                    id=\"standard-basic\"\n                    label=\"Title\"\n                    name=\"Title\"\n                    type=\"text\"\n                    variant=\"filled\"\n                    placeholder=\"Title\"\n                    error={errors.Title && touched.Title}\n                    helperText={touched.Title\n                        ? errors.Title \n                        : undefined\n                    }\n                    value={values.Title}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                />\n                <TextField \n                    id=\"standard-basic\"\n                    label=\"Domain\"\n                    name=\"Domain\"\n                    type=\"text\"\n                    variant=\"filled\"\n                    placeholder=\"Domain\"\n                    error={errors.Domain && touched.Domain}\n                    helperText={touched.Domain\n                        ? errors.Domain\n                        : undefined\n                    }\n                    value={values.Domain}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                />\n                <TextField\n                    id=\"date\"\n                    label=\"Breach date\"\n                    name=\"BreachDate\"\n                    type=\"date\"\n                    variant=\"filled\"\n                    error={errors.BreachDate && touched.BreachDate}\n                    helperText={touched.BreachDate\n                        ? errors.BreachDate\n                        : undefined\n                    }\n                    value={values.BreachDate}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                />\n                <TextField \n                    id=\"standard-number\"\n                    label=\"PwnCount\"\n                    name=\"PwnCount\"\n                    type=\"number\"\n                    placeholder=\"0\"\n                    variant=\"filled\"\n                    error={errors.PwnCount && touched.PwnCount}\n                    helperText={touched.PwnCount\n                        ? errors.PwnCount\n                        : undefined\n                    }\n                    value={values.PwnCount}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                />\n                <TextField \n                    id=\"standard-multiline-flexible\"\n                    label=\"Description\"\n                    name=\"Description\"\n                    placeholder=\"Description\"\n                    variant=\"filled\"\n                    rows={5}\n                    error={errors.Description && touched.Description}\n                    helperText={touched.Description\n                        ? errors.Description\n                        : undefined\n                    }\n                    value={values.Description}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    multiline\n                />\n                <FieldArray\n                    name=\"DataClasses\"\n                    render={arrayHelpers => (\n                        <List className={classes.list}>\n                            {values.DataClasses && values.DataClasses.length > 0 ? (\n                                values.DataClasses.map((data, index) => (\n                                    <ListItem  className={classes.listItem} key={index}>\n                                        <TextField \n                                            name={`DataClasses.${index}`}\n                                            label=\"Data types\"\n                                            variant=\"filled\"\n                                            placeholder=\"Ex. Emails, passwords, etc.\"\n                                            error={errors.DataClasses?.index}\n                                            value={data}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            className={classes.listField}\n                                        />\n                                        <Button\n                                            type=\"button\"\n                                            color=\"primary\"\n                                            className={classes.listAddButton}\n                                            onClick={() => arrayHelpers.insert(index + 1, '')} // Adds new empty field after the current index\n                                        >\n                                            Add\n                                        </Button>\n                                        <Button\n                                            type=\"button\"\n                                            color=\"secondary\"\n                                            className={classes.listDelButton}\n                                            onClick={() => arrayHelpers.remove(index)}\n                                        >\n                                            Delete\n                                        </Button>\n                                    </ListItem>\n                                ))\n                            ) : (\n                                <Button type=\"button\" className={classes.buttonLeaks} color=\"primary\" onClick={() => arrayHelpers.push('')}>\n                                    Add data leak types\n                                </Button>\n                            )}\n                        </List>\n                    )}\n                />\n                <div className={classes.fileContainer}>\n                    <input type=\"file\" name=\"file\" className={classes.fileInput} onChange={(event) => {\n                        setFieldValue(\"file\", event.currentTarget.files[0]);\n                    }}/>\n                </div>\n\n                <Button type=\"submit\" className={classes.button} color=\"primary\" disabled={isSubmitting}>\n                    Create\n                </Button>\n                <Button type=\"button\" className={classes.resetButton} color=\"secondary\" onClick={handleReset}>\n                    Reset\n                </Button>\n            </form>\n        </Paper>\n    )\n}\n\nconst useStyles = makeStyles({\n    '@global': {\n        '.MuiFormHelperText-root.Mui-error' : {\n            color: \"#cf6679\"\n        },\n        '.MuiFormLabel-root.Mui-error' : {\n            color: \"#cf6679\"\n        },\n        '.MuiFormLabel-root' : {\n            color: \"#ffffff\"\n        },\n        '.MuiFormLabel-root.Mui-focused' : {\n            color: \"#ffffff\"\n        },\n        '.MuiInputBase-input.MuiFilledInput-input' : {\n            color: \"#ffffff\"\n        },\n        '.MuiFormLabel-root.Mui-focused.Mui-error' : {\n            color: \"#cf6679\"\n        },\n        '.MuiInput-underline.Mui-error::after' : {\n            borderBottomColor: \"#cf6679\"\n        },\n        '.MuiInputBase-root.MuiFilledInput-root' : {\n            backgroundColor: \"#373837\"\n        },\n        '.MuiFormControl-root.MuiTextField-root' : {\n            margin: \"0.5em 0em 0.5em 0em\"\n        },\n    },\n    form: {\n        display: 'flex',\n        minWidth: '40%',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        marginTop: '2em',\n        marginBottom: '2em',\n        padding: '1em',\n        overflow: 'auto',\n    },\n    list: {\n        overflow: 'auto',\n        maxHeight: '250px',\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column'\n    },\n    listItem: {\n        display: 'flex',\n    },\n    listField: {\n        flexGrow: '2'\n    },\n    listAddButton: {\n        flexGrow: '1',\n        color: \"#000000\",\n        backgroundColor: \"#3949ab\",\n        '&:hover': {\n            backgroundColor: \"#627d98\",\n        },\n    },\n    listDelButton: {\n        flexGrow: '0.6',\n        color: \"#000000\",\n        backgroundColor: \"#F44336\",\n        '&:hover': {\n            backgroundColor: \"#FF7961\",\n        },\n    },\n    paper: {\n        marginTop: '1em',\n        marginBottom: '1em',\n        backgroundColor: '#232423',\n        minWidth: '80vw',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    button: {\n        color: \"#000000\",\n        backgroundColor: \"#3949ab\",\n        width: '9em',\n        margin: '0.5em',\n        alignSelf: 'center',\n        '&:hover': {\n            backgroundColor: \"#627d98\",\n        },\n    },\n    buttonLeaks: {\n        color: \"#000000\",\n        backgroundColor: \"#3949ab\",\n        width: '9em',\n        margin: '0.5em',\n        alignSelf: 'center',\n        '&:hover': {\n            backgroundColor: \"#627d98\",\n        },\n    },\n    resetButton: {\n        color: \"#000000\",\n        width: '9em',\n        margin: '0.5em',\n        alignSelf: 'center',\n        backgroundColor: \"#F44336\",\n        '&:hover': {\n            backgroundColor: \"#FF7961\",\n        },\n    },\n    fileContainer: {\n        display: 'inline-block',\n        textAlign: 'left',\n        background: '#373837',\n        padding: '16px',\n        position: 'relative',\n        borderRadius: '3px',\n        alignSelf: 'center',\n        margin: '0.5em',\n    },\n    fileInput: {\n        color: '#ffffff',\n\n    }\n});\n\nexport default FormComponent;","import { connect } from 'react-redux';\nimport { withFormik } from 'formik';\nimport { ObjectID } from 'bson';\nimport { addBreach } from '../actions/breachesForm';\nimport FormComponent from '../components/BreachesForm';\n\nconst Form = withFormik({\n    validate(values, props) {\n        const errors = {\n        };\n        const urlExpression = /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/g;\n\n        if(!values.Name) {\n            errors.Name = \"Name is required\";\n        }\n\n        if(!values.Title) {\n            errors.Title = \"Title is required\";\n        }\n\n        if(!values.Domain) {\n            errors.Domain = \"Domain is required\";\n        } else if (!values.Domain.match(urlExpression)) {\n            \n            errors.Domain = \"Domain must be valid\";\n        }\n\n        if(!values.BreachDate) {\n            errors.BreachDate = \"Breach Date is required\";\n        } else if (Date.parse(values.BreachDate) > Date.now()) {\n            errors.BreachDate = \"Date can't be from the future\";\n        }\n\n        if(!values.PwnCount) {\n            errors.PwnCount = \"PwnCount is required (estimate)\"\n        } else if(values.PwnCount < 0) {\n            errors.PwnCount = \"PwnCount must be a positive value\"\n        }\n        \n        if(!values.Description) {\n            errors.Description = \"Description is required\"\n        } else if(values.Description.length < 20) {\n            errors.Description = \"Description too short\"\n        }\n\n        return errors;\n    },\n    mapPropsToValues: props => ({\n        Name: \"\",\n        Title: \"\",\n        Domain: \"\",\n        BreachDate: \"2021-01-01\",\n        PwnCount: 0,\n        Description: \"\",\n        DataClasses: [],\n        file: null,\n    }),\n    async handleSubmit(values, { props, setSubmitting, resetForm }) {\n        const formData = new FormData();\n\t\tformData.append('upload', values.file);\n        let url = \"\"\n\n        if(values.file) {\n            await fetch(\n                'https://user-sec-app.herokuapp.com/upload',\n                {\n                    method: 'POST',\n                    body: formData,\n                }\n            )\n            .then((response) => response.json())\n                .then((result) => {\n                    url = result.url\n                })\n                .catch((error) => {\n                    console.error('Error:', error);\n                });\n        }\n\n        const breach = {\n            BreachDate: values.BreachDate,\n            Description: values.Description,\n            Domain: values.Domain,\n            Name: values.Name,\n            PwnCount: values.PwnCount,\n            Title: values.Title,\n            _id: (new ObjectID()).toString(),\n            DataClasses: values.DataClasses.map(x => [x]),\n            LogoPath: url\n        }\n\n        props.addBreach(breach)\n\n        setTimeout(() => {\n            setSubmitting(false);\n            resetForm();\n        }, 500);\n    },\n})(FormComponent)\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addBreach: (breach) => {\n            dispatch(addBreach(breach))\n        },\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(Form)\n","import * as types from '../constants/ActionTypes'\n\nexport const addBreach = (breach) => { \n    return {\n        type: types.ADD_BREACH,\n        breach: breach\n    }\n}\n","import { useEffect } from 'react';\nimport { Button, AppBar, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport MaterialTable from 'material-table';\nimport { Link } from 'react-router-dom';\nimport Toolbar from '../containers/Toolbar';\nimport Form from '../containers/BreachesForm';\n\nconst Breaches = ({breaches, loaded, getBreaches, sortByName, sortByCount, deleteBreachById, setVisibilityFilter, setKeyword}) => {\n  useEffect(() => {\n    if(!loaded){\n      getBreaches()\n    }\n  }, [getBreaches, loaded])\n\n  const classes = useStyles();\n\n  const isMobile = useMediaQuery('(max-width:600px)');\n  const isMidsized = useMediaQuery('(max-width:900px)');\n\n  const columnModel = [\n    {\n      field: 'url',\n      title: 'Logo',\n      width: null,\n      cellStyle: {\n        width: 60,\n        whiteSpace: 'nowrap',\n        borderBottom: 0,\n      },\n      headerStyle: {\n        width: 60,\n      },\n      hidden: isMobile ? true : false,\n      render: rowData => (<img src={rowData.LogoPath} alt=\"logo\" style={{maxHeight: 30, maxWidth: 60}}/>)\n    },\n    { title: 'Name', field: 'Name' },\n    { title: 'Domain', field: 'Domain', hidden: isMobile ? true : isMidsized ? true : false },\n    { \n      title: 'BreachDate',\n      field: 'BreachDate',\n      hidden: isMobile ? true : isMidsized ? true : false,\n      render: rowData => (\n        <p>{rowData.BreachDate.slice(0,10)}</p>\n      )\n    },\n    { title: 'PwnCount', field: 'PwnCount'},\n    {\n      field: 'url',\n      render: rowData => (\n        <Button className={classes.button}>\n          <Link to={rowData._id} style={{color: \"#000000\", textDecoration: \"None\"}}>Details</Link>\n        </Button>\n      )\n    }\n  ]\n\n  return (\n    <>\n      <AppBar position=\"static\" className={classes.navBar}>\n        <Typography type=\"h2\" className={classes.navText}>Data leaks database</Typography>\n      </AppBar>\n      <div className={classes.flexContainer}>\n        <MaterialTable\n          columns={columnModel}\n          data={breaches}\n          title=\"Demo Title\"\n          style={{\n            backgroundColor: \"#232423\",\n            color: \"#ffffff\",\n            minWidth: \"80vw\",\n            maxWidth: \"99%\",\n            overflow: \"auto\",\n            marginBottom: \"2em\"\n          }}\n          isLoading={loaded ? false : true}\n          className={classes.table}\n          options={{\n            headerStyle:{backgroundColor: \"#232423\", color: \"#ffffff\"},\n            rowStyle: { \n              fontFamily: 'Roboto',\n              color: \"#ffffff\",\n            },\n            cellStyle: {borderBottom: 0},\n            sorting: false,\n          }}\n          actions={isMobile\n            ? undefined\n            : [{\n                icon: 'delete',\n                tooltip: 'Delete breach',\n                onClick: (event, rowData) => deleteBreachById(rowData._id)\n              }]\n          }\n          components={{\n              Toolbar: props => (\n                <Toolbar />\n              )\n          }}\n        />\n        <Form />\n      </div>\n    </>\n  );\n}\n\nconst useStyles = makeStyles({\n    '@global': {\n        'body' : {\n            margin: 0,\n            background: \"#181918\"\n        },\n        'td.MuiTableCell-root' : {\n            borderBottom: 0,\n            color: '#ffffff',\n        },\n        '.MuiIconButton-root.Mui-disabled': {\n          color: \"#ffffff\"\n        },\n        '.MuiIconButton-root': {\n          color: \"#ffffff\"\n        },\n        'span.MuiTypography-caption': {\n          color: \"#ffffff\"\n        },\n        'svg.MuiTablePagination-selectIcon': {\n          color: \"#ffffff\"\n        }\n    },\n    flexContainer: {\n        display: 'flex',\n        minHeight: '100vh',\n        width: '100%',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    button: {\n        color: \"#000000\",\n        backgroundColor: \"#3949ab\",\n        '&:hover': {\n          backgroundColor: \"#627d98\",\n        },\n    },\n    navText: {\n      padding: \"1em\",\n      fontSize: \"1.5em\"\n    },\n    navBar: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    }\n});\n\nexport default Breaches;\n","import { createSelector } from 'reselect'\n\nconst getBreaches = state => state.breaches\nconst getVisibilityFilter = state => state.visibilityFilter\nconst getKeyword = state => state.keyword\n\nexport const getFilteredBreaches = createSelector(\n    getVisibilityFilter,\n    getBreaches,\n    (visibilityFilter, breaches) => {\n        switch (visibilityFilter) {\n            case 'SHOW_ALL':\n                return breaches\n            case 'SHOW_VERIFIED':\n                return breaches.filter(t => t.IsVerified)\n            default:\n                return breaches\n        }\n    }\n)\n\nexport const getBreachesFilteredByKeyword = createSelector(\n    getFilteredBreaches,\n    getKeyword,\n    (filteredBreaches, keyword) => {\n        if(keyword !== \"\") {\n            const withDuplicates = filteredBreaches.filter(breach => breach.Name.toLowerCase().includes(keyword) || breach.Description.toLowerCase().includes(keyword))\n\n            return Array.from(new Set(withDuplicates.map(x => x._id)))\n                .map(id => {\n                    return withDuplicates.find(a => a._id === id)\n                })\n        }\n\n        return filteredBreaches\n    }\n);","import { connect } from 'react-redux';\nimport { getBreaches, deleteBreachById } from '../actions/breaches';\nimport Breaches from '../components/Breaches'\nimport { getBreachesFilteredByKeyword } from '../selectors/breaches'\n\nconst mapStateToProps = (state) => {\n    return {\n        breaches: getBreachesFilteredByKeyword(state.breaches),\n        loaded: state.breaches.loaded\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getBreaches: () => {\n            dispatch(getBreaches())\n        },\n        deleteBreachById: (id) => {\n            dispatch(deleteBreachById(id))\n        },\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Breaches)\n","import { createSelector } from 'reselect'\n\nconst getBreaches = state => state.breaches.breaches\nconst getBreachId = (_state, props) => props.match.params.id\n\nexport const getBreachMatchingRouteId = createSelector(\n    getBreaches,\n    getBreachId,\n    (breaches, id) => {\n        return breaches.filter(x => x._id === id)[0]\n    }\n);","import { forwardRef } from 'react';\nimport { Button, Paper, TextField, List, ListItem } from '@material-ui/core';\nimport { FieldArray} from 'formik';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst BreachesModal = forwardRef((props, ref) => {\n    const {\n        values,\n        touched,\n        errors,\n        isSubmitting,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        handleReset,\n        setEditing\n    } = props;\n\n    const classes = useStyles();\n\n    return (        \n        <Paper className={classes.modal}>\n            <form onSubmit={handleSubmit} spellCheck=\"false\" className={classes.form}>\n                <TextField \n                    id=\"standard-basic\"\n                    label=\"Name\"\n                    name=\"Name\"\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    variant=\"filled\"\n                    error={errors.Name && touched.Name}\n                    helperText={touched.Name \n                        ? errors.Name\n                        : undefined\n                    }\n                    value={values.Name}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                />\n                <TextField \n                    id=\"standard-basic\"\n                    label=\"Title\"\n                    name=\"Title\"\n                    type=\"text\"\n                    placeholder=\"Title\"\n                    variant=\"filled\"\n                    error={errors.Title && touched.Title}\n                    helperText={touched.Title\n                        ? errors.Title \n                        : undefined\n                    }\n                    value={values.Title}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                />\n                <TextField \n                    id=\"standard-basic\"\n                    label=\"Domain\"\n                    name=\"Domain\"\n                    type=\"text\"\n                    placeholder=\"Domain\"\n                    variant=\"filled\"\n                    error={errors.Domain && touched.Domain}\n                    helperText={touched.Domain\n                        ? errors.Domain\n                        : undefined\n                    }\n                    value={values.Domain}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                />\n                <TextField\n                    id=\"date\"\n                    label=\"Breach date\"\n                    name=\"BreachDate\"\n                    type=\"date\"\n                    variant=\"filled\"\n                    error={errors.BreachDate && touched.BreachDate}\n                    helperText={touched.BreachDate\n                        ? errors.BreachDate\n                        : undefined\n                    }\n                    value={values.BreachDate}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                />\n                <TextField \n                    id=\"standard-number\"\n                    label=\"PwnCount\"\n                    name=\"PwnCount\"\n                    type=\"number\"\n                    placeholder=\"0\"\n                    variant=\"filled\"\n                    error={errors.PwnCount && touched.PwnCount}\n                    helperText={touched.PwnCount\n                        ? errors.PwnCount\n                        : undefined\n                    }\n                    value={values.PwnCount}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                />\n                <TextField \n                    id=\"standard-multiline-flexible\"\n                    label=\"Description\"\n                    name=\"Description\"\n                    placeholder=\"Description\"\n                    variant=\"filled\"\n                    rows={4}\n                    error={errors.Description && touched.Description}\n                    value={values.Description}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    multiline\n                />\n                <FieldArray\n                    name=\"DataClasses\"\n                    render={arrayHelpers => (\n                        <List className={classes.list}>\n                            {values.DataClasses && values.DataClasses.length > 0 ? (\n                                values.DataClasses.map((data, index) => (\n                                    <ListItem className={classes.listItem} key={index}>\n                                        <TextField \n                                            name={`DataClasses.${index}`}\n                                            label=\"Data types\"\n                                            placeholder=\"Ex. Emails, passwords, etc.\"\n                                            variant=\"filled\"\n                                            error={errors.DataClasses?.index}\n                                            value={data}\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            className={classes.listField}\n                                        />\n                                        <Button\n                                            type=\"button\"\n                                            onClick={() => arrayHelpers.insert(index + 1, '')} // Adds new empty field after the current index\n                                            className={classes.listAddButton}\n                                        >\n                                            Add\n                                        </Button>\n                                        <Button\n                                            type=\"button\"\n                                            onClick={() => arrayHelpers.remove(index)}\n                                            className={classes.listDelButton}\n                                        >\n                                            Delete\n                                        </Button>\n                                    </ListItem>\n                                ))\n                            ) : (\n                                <Button type=\"button\" className={classes.buttonLeaks} onClick={() => arrayHelpers.push('')}>\n                                    Add data leak types\n                                </Button>\n                            )}\n                        </List>\n                    )}\n                />\n                <Button type=\"submit\" className={classes.button} color=\"primary\" disabled={isSubmitting}>\n                    Create\n                </Button>\n                <Button type=\"button\" className={classes.resetButton} color=\"secondary\" onClick={handleReset}>\n                    Reset\n                </Button>\n            </form>\n            <div className={classes.controls}>\n                <Button type=\"button\" variant=\"outlined\" className={classes.closeButton} onClick={() => setEditing(false) }>\n                    Close\n                </Button>\n            </div>\n        </Paper>\n    )\n})\n\nconst useStyles = makeStyles({\n    '@global': {\n        '.MuiFormHelperText-root.Mui-error' : {\n            color: \"#cf6679\"\n        },\n        '.MuiFormLabel-root.Mui-error' : {\n            color: \"#cf6679\"\n        },\n        '.MuiFormLabel-root' : {\n            color: \"#ffffff\"\n        },\n        '.MuiFormLabel-root.Mui-focused' : {\n            color: \"#ffffff\"\n        },\n        '.MuiInputBase-input.MuiInput-input' : {\n            color: \"#ffffff\"\n        },\n        '.MuiFormLabel-root.Mui-focused.Mui-error' : {\n            color: \"#cf6679\"\n        },\n        '.MuiInput-underline.Mui-error::after' : {\n            borderBottomColor: \"#cf6679\"\n        },\n        '.MuiInputBase-root.MuiFilledInput-root' : {\n            backgroundColor: \"#373837\"\n        },\n        '.MuiInputBase-input.MuiFilledInput-input' : {\n            color: \"#ffffff\",\n        },\n        '.MuiFormControl-root.MuiTextField-root' : {\n            margin: \"0.5em 0em 0.5em 0em\"\n        },\n    },\n    modal: {\n        position: 'relative',\n        minHeight: '80vh',\n        maxHeight: '90vh',\n        top: '5%',\n        left: '50%',\n        width: '90%',\n        marginLeft: '-45%',\n        overflow: 'auto',\n        backgroundColor: '#232423',\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        ['@media (min-width:780px)']: {  // eslint-disable-line no-useless-computed-key\n            width: '70%',\n            marginLeft: '-35%'\n        }\n    },\n    list: {\n        overflow: 'auto',\n        maxHeight: '250px',\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column'\n    },\n    listItem: {\n        display: 'flex',\n    },\n    listField: {\n        flexGrow: '2'\n    },\n    listAddButton: {\n        flexGrow: '1',\n        color: \"#000000\",\n        backgroundColor: \"#3949ab\",\n        '&:hover': {\n            backgroundColor: \"#627d98\",\n        },\n    },\n    listDelButton: {\n        flexGrow: '0.6',\n        color: \"#000000\",\n        backgroundColor: \"#F44336\",\n        '&:hover': {\n            backgroundColor: \"#FF7961\",\n        },\n    },\n    closeButton: {\n        color: \"#F44336\",\n        border: \"1px solid #F44336\"\n    },\n    controls: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'absolute',\n        left: '50px',\n        top: '20px',\n    },\n    form: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        paddingTop: '5em',\n        minWidth: \"40%\",\n        margin: '0 1em',\n    },\n    button: {\n        color: \"#000000\",\n        backgroundColor: \"#3949ab\",\n        width: '9em',\n        margin: '0.5em',\n        alignSelf: 'center',\n        '&:hover': {\n            backgroundColor: \"#627d98\",\n        },\n    },\n    buttonLeaks: {\n        color: \"#000000\",\n        backgroundColor: \"#3949ab\",\n        width: '9em',\n        margin: '0.5em',\n        alignSelf: 'center',\n        '&:hover': {\n            backgroundColor: \"#627d98\",\n        },\n    },\n    resetButton: {\n        color: \"#000000\",\n        width: '9em',\n        margin: '0.5em',\n        alignSelf: 'center',\n        backgroundColor: \"#F44336\",\n        '&:hover': {\n            backgroundColor: \"#FF7961\",\n        },\n    },\n});\n\n\nexport default BreachesModal;","import { Card, CardContent, Typography, CircularProgress, Modal, Button } from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactHtmlParser from 'react-html-parser';\nimport BreachesModal from './BreachesModal'\n\nconst BreachDetails = (props) => {\n\n    const {\n        breach,\n        loaded,\n        getBreaches,\n        editing,\n        setEditing\n    } = props;\n\n    const classes = useStyles();\n\n    if(loaded) {\n        if(breach) {\n            return (\n                <div className={classes.flexContainer}>\n                    <Card className={classes.cardContainer}>\n                        <CardContent>\n                            <Typography color=\"textSecondary\" className={classes.Typography} gutterBottom>\n                                <Button className={classes.backButton}>\n                                    <Link to='/' style={{color: \"#000\", textDecoration: \"None\"}}>Return</Link>\n                                </Button>\n                            </Typography>\n                            <img src={breach.LogoPath} alt=\"logo\" style={{height: 50}}/>\n                            <Typography variant=\"h6\" className={classes.Typography} gutterBottom>\n                                Name: {breach.Name}\n                            </Typography>\n                            <Typography color=\"h7\" className={classes.Typography} gutterBottom>\n                                Title: {breach.Title}\n                            </Typography>\n                            <Typography color=\"textSecondary\" className={classes.Typography} gutterBottom>\n                                Domain: {breach.Domain}\n                            </Typography>\n                            <Typography color=\"textSecondary\" className={classes.Typography} gutterBottom>\n                                Date: {breach.BreachDate.slice(0,10)}\n                            </Typography>\n                            <Typography color=\"textSecondary\" className={classes.Typography} gutterBottom>\n                                Pwn Count: {breach.PwnCount}\n                            </Typography>\n                            <Typography variant=\"body2\" color=\"textSecondary\" className={classes.Typography} component=\"p\" gutterBottom>\n                                Description: {ReactHtmlParser(breach.Description)}\n                            </Typography>\n                            <Typography variant=\"body2\" className={classes.Typography} component=\"p\">\n                                Data types leaked:\n                            </Typography>\n                            <ul>\n                                {breach.DataClasses?.map((data, index) => (\n                                    <Typography key={index} color=\"textSecondary\" className={classes.listItem}  component=\"li\">{data}</Typography>\n                                ))}\n                            </ul>\n                            <Button type=\"button\" className={classes.button} onClick={() => {\n                                setEditing(true)\n                            }}>\n                                Edit\n                            </Button>\n                            <Modal\n                                open={editing}\n                                onClose={() => {\n                                    setEditing(false)\n                                }}\n                            >\n                                <BreachesModal {...props} />\n                            </Modal>\n                        </CardContent>\n                    </Card>\n                </div>\n            )\n        }\n        return (\n            <h1>Not found</h1>\n        )\n    } else {\n        return (\n            <div className={classes.flexContainer}>\n                <CircularProgress />\n                {loaded ? undefined : getBreaches()}\n            </div>\n        )\n    }\n}\n\nconst useStyles = makeStyles({\n    '@global': {\n        'body' : {\n            margin: 0,\n            background: \"#181918\"\n        },\n        'a' : {\n            color: \"#ffffff\"\n        }\n    },\n    Typography: {\n        color: \"#ffffff\",\n        margin: \"1em 0\"\n    },\n    listItem: {\n        color: \"#ffffff\",\n        fontSize: \"0.875rem\"\n    },\n    cardContainer: {\n        maxWidth: \"800px\",\n        backgroundColor: \"#232423\",\n        marginTop: '1em',\n        marginBottom: '1em',\n    },\n    flexContainer: {\n        display: 'flex',\n        minHeight: '100vh',\n        width: '98vw',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    controls: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    button: {\n        color: \"#000000\",\n        backgroundColor: \"#3949ab\",\n        '&:hover': {\n            backgroundColor: \"#627d98\",\n        },\n    },\n    backButton: {\n        color: \"#000000\",\n        backgroundColor: \"#F44336\",\n        '&:hover': {\n            backgroundColor: \"#FF7961\",\n        },\n    },\n});\n\nexport default BreachDetails;","import { connect } from 'react-redux';\nimport { getBreachMatchingRouteId } from '../selectors/breachDetails';\nimport { withFormik } from 'formik';\nimport BreachDetailsComponent from '../components/BreachDetails';\nimport { getBreaches } from '../actions/breaches';\nimport { setEditing, updateBreach } from '../actions/breachesDetails';\n\nconst BreachDetails = withFormik({\n    validate(values, props) {\n        const errors = {};\n        const urlExpression = /([\\w.]+\\.[a-z]{2,3}[^,\\s]*)/g;\n\n        if(!values.Name) {\n            errors.Name = \"Name is required\";\n        }\n\n        if(!values.Title) {\n            errors.Title = \"Title is required\";\n        }\n\n        if(!values.Domain) {\n            errors.Domain = \"Domain is required\";\n        } else if (!values.Domain.match(urlExpression)) {\n            \n            errors.Domain = \"Domain must be valid\";\n        }\n\n        if(!values.BreachDate) {\n            errors.BreachDate = \"Breach Date is required\";\n        } else if (Date.parse(values.BreachDate) > Date.now()) {\n            errors.BreachDate = \"Invalid date\";\n        }\n\n        if(!values.PwnCount) {\n            errors.PwnCount = \"PwnCount is required (estimate)\"\n        } else if(values.PwnCount < 0) {\n            errors.PwnCount = \"PwnCount must be a positive value\"\n        }\n        \n        if(!values.Description) {\n            errors.Description = \"Description is required\"\n        }\n\n        return errors;\n    },\n    enableReinitialize: true,\n    mapPropsToValues: props => {\n        if(props.breach === undefined) {\n            return {\n                Name: \"\",\n                Title: \"\",\n                Domain: \"\",\n                BreachDate: \"2021-01-01\",\n                PwnCount: 0,\n                Description: \"\",\n                DataClasses: [],\n            }\n        }\n\n        return {\n            Name: props.breach.Name,\n            Title: props.breach.Title,\n            Domain: props.breach.Domain,\n            BreachDate: props.breach.BreachDate.slice(0,10),\n            PwnCount: props.breach.PwnCount,\n            Description: props.breach.Description,\n            DataClasses: props.breach.DataClasses,\n            _id: props.breach._id\n        }\n    },\n    handleSubmit(values, { props, setSubmitting, resetForm }) {\n\n        props.updateBreach(values)\n        props.setEditing(false)\n        setTimeout(() => {\n            setSubmitting(false);\n            resetForm();\n        }, 500);\n    },\n})(BreachDetailsComponent)\n\nconst mapStateToProps = (state, ownProps) => {\n    return {\n        breach: getBreachMatchingRouteId(state, ownProps),\n        loaded: state.breaches.loaded,\n        editing: state.breaches.editing\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getBreaches: () => {\n            dispatch(getBreaches())\n        },\n        setEditing: (editing) => {\n            dispatch(setEditing(editing))\n        },\n        updateBreach: (values) => {\n            dispatch(updateBreach(values))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BreachDetails)\n","import * as types from '../constants/ActionTypes'\n\nexport const setEditing = (editing) => { \n    return {\n        type: types.SET_EDITING,\n        editing: editing\n    }\n}\n\nexport const updateBreach = (breach) => { \n    return {\n        type: types.UPDATE_BREACH,\n        breach: breach\n    }\n}","import * as types from '../constants/ActionTypes'\n\nconst defaultState = {\n    breaches: [],\n    errors: [],\n    visibilityFilter: 'SHOW_ALL',\n    keyword: '',\n    loaded: false,\n    editing: false,\n}\n\n\nconst breaches = (state=defaultState, action) => {\n    switch(action.type) {\n        case types.BREACHES_SUCCESS:\n            return {\n                ...state,\n                breaches: [...state.breaches, ...action.payload],\n                loaded: true\n            }\n        case types.ADD_BREACH:\n            const newBreach = {\n                DataClasses: action.breach.DataClasses,\n                _id: action.breach._id,\n                Name: action.breach.Name,\n                Title: action.breach.Title,\n                Domain: action.breach.Domain,\n                BreachDate: action.breach.BreachDate,\n                PwnCount: action.breach.PwnCount,\n                Description: action.breach.Description,\n                LogoPath: action.breach.LogoPath,\n            }\n            return {\n                ...state,\n                breaches: [...state.breaches, newBreach]\n            }\n        case types.UPDATE_BREACH:\n            return {\n                ...state,\n                breaches: [...state.breaches.map(x => {\n                    console.log(action.breach._id)\n                    if(x._id === action.breach._id) {\n                        return {\n                            ...x,\n                            DataClasses: action.breach.DataClasses,\n                            _id: action.breach._id,\n                            Name: action.breach.Name,\n                            Title: action.breach.Title,\n                            Domain: action.breach.Domain,\n                            BreachDate: action.breach.BreachDate,\n                            PwnCount: action.breach.PwnCount,\n                            Description: action.breach.Description,\n                        }\n                    }\n                    return x\n                })]\n            }\n        case types.SORT_BREACHES_BY_NAME:\n            const sortedByName = state.breaches.sort((a, b) => {\n                return a.Name.localeCompare(b.Name)\n            })\n\n            return {\n                ...state,\n                breaches: [...sortedByName]\n            }\n        case types.SORT_BREACHES_BY_COUNT:\n            const sortedByCount = state.breaches.sort((a, b) => {\n                if(a.PwnCount < b.PwnCount) { return 1 }\n                if(a.PwnCount > b.PwnCount) { return -1 }\n                return 0\n            })\n\n            return {\n                ...state,\n                breaches: [...sortedByCount]\n            }\n        case types.DELETE_BREACH_BY_ID:\n            const filtered = state.breaches.filter(x => x._id !== action.id)\n\n            return {\n                ...state,\n                breaches: [...filtered]\n            }\n        case types.SET_VISIBILITY_FILTER:\n            return {\n                ...state,\n                visibilityFilter: action.filter\n            }\n        case types.SET_KEYWORD:\n            return {\n                ...state,\n                keyword: action.keyword\n            }\n        case types.SET_EDITING:\n            return {\n                ...state,\n                editing: action.editing\n            }\n        default: \n            return state\n    }\n}\n\nexport default breaches;","import { combineReducers } from 'redux';\nimport breaches from './breaches'\n\nexport default combineReducers({\n    breaches\n})","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport { apiMiddleware } from 'redux-api-middleware';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Route, BrowserRouter  as Router, Switch} from 'react-router-dom';\nimport Breaches from './containers/Breaches';\nimport BreachDetails from './containers/BreachDetails';\nimport rootReducer from './reducers/index';\nimport { NotFound } from './components/404'\n\nconst persistedState = localStorage.getItem('reduxState') ? JSON.parse(localStorage.getItem('reduxState')) : {}\n\nconst store = createStore(rootReducer, persistedState, composeWithDevTools(applyMiddleware(apiMiddleware)))\n\nstore.subscribe(()=>{\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n})\n\nrender(\n  <Provider store={store}>\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Breaches} />\n        <Route exact path=\"/:id\" component={BreachDetails} />\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n","export const NotFound = () => (<h1>Not found</h1>)"],"sourceRoot":""}